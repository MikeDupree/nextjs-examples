import type { NextPage, GetServerSidePropsContext } from 'next';
import Head from 'next/head';
import { useRouter } from 'next/router';
import styles from '../../styles/Home.module.css';
import { getStaticProps } from '../static-generation';
import DynamicData from '../../__MOCKS__/DynamicData';
import Link from 'next/link';
import { Button, Typography } from '@mui/material';

type Props = {
  pageSlug: string[];
  data: {
    id: number;
    title: string;
    body: string;
  };
};

const Dynamic = ({ pageSlug, data }: Props) => {
  const router = useRouter();
  const { slug } = router.query;

  return (
    <div className={styles.container}>
      <Head>
        <title>Dynamic</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Typography variant="h3">Dynamic route</Typography>

        <div style={{ display: 'block' }}>
          <Typography variant="h5" sx={{ textAlign: 'left' }}>
            Filename:{' '}
            <b style={{ color: 'green' }}>
              /pages/dynamic/<b style={{ color: '#556cd6' }}>[[...slug]]</b>.tsx
            </b>
          </Typography>
          <Typography variant="h5" sx={{ textAlign: 'left' }}>
            Pathname: <b style={{ color: 'green' }}>{router.pathname}</b>
          </Typography>
          <Typography variant="h5" sx={{ textAlign: 'left' }}>
            URL: <b style={{ color: 'green' }}>{router.asPath}</b>
          </Typography>
          <Typography variant="h5" color="primary" sx={{ fontWeight: 'bold' }}>
            [...slug] = <b style={{ color: 'green' }}>{slug}</b>
          </Typography>
        </div>
        <Link href="/dynamic/0" passHref>
          <Button variant="text">/dynamic/0</Button>
        </Link>
        <Link href="/dynamic/1" passHref>
          <Button variant="text">/dynamic/1</Button>
        </Link>
        <Link href="/dynamic/2" passHref>
          <Button variant="text">/dynamic/2</Button>
        </Link>

        <h3>{data.title}</h3>
        <p style={{ maxWidth: '600px' }}>{data.body}</p>
      </main>
    </div>
  );
};

export async function getServerSideProps(context: GetServerSidePropsContext) {
  const pageSlug = context?.query?.slug || [''];

  let data = {
    id: 0,
    title: 'Not Found',
    body: 'No Data for this route',
  };
  if (pageSlug.length === 1 && !isNaN(parseInt(pageSlug[0]))) {
    data = DynamicData[parseInt(pageSlug[0])] || data;
  }

  return { props: { pageSlug, data } };
}

export default Dynamic;
